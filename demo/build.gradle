buildscript {
    ext {
        kotlinVersion = '1.2.0'
        springBootVersion = '1.5.10.RELEASE'

        jacksonKotlinModuleVersion = '2.9.0'

        junitPlatformVersion = '1.0.2'
        junitJupiterVersion = '5.0.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'cn.staynoob'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}


dependencies {
    compile project(':')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compile('org.springframework.boot:spring-boot-starter')
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonKotlinModuleVersion}")

    runtime('org.springframework.boot:spring-boot-devtools')

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit"
    }
    // junit5
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.0')
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.0')
}
